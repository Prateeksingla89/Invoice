@model POC.ViewModel.InvoiceViewModel

@using (Html.BeginForm("Save", "Invoice", FormMethod.Post, htmlAttributes: new { @class = "form-inline" }))
{

<div class="form-horizontal">
    <h2 class="text-center">@Model.Title</h2>
    <hr />
    <h4 class="text-danger">Customer Details</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.InvoiceNumber, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-6">
            @Html.EditorFor(m => m.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.InvoiceNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CustomerName, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-6">
            @Html.EditorFor(m => m.CustomerName, "{0:d MMM yyyy}", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.CustomerName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CustomerDescription, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-6">
            @Html.EditorFor(m => m.CustomerDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.CustomerDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Address, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-6">
            @Html.EditorFor(m => m.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <!-- Trigger the modal with a button -->
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">Add Item</button>
    @Html.Partial("_AddNewInvoiceLines", Model)
    <hr />
    <h4 class="text-danger">Invoice Details</h4>
    <hr />
    <table id="maintable" class="table table-responsive table-striped">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Product Tax</th>
                <th>Qty</th>
                <th>Unit Value</th>
                <th>Total Value</th>
            </tr>
        </thead>
        <tbody>

            @if (Model.InvoiceLines.Count > 0)
            {

                for (int i = 0; i < Model.InvoiceLines.Count; i++)
                {
            <tr class="contacts-record-template">
                <td>
                    @Html.DropDownListFor(model => model.InvoiceLines[i].ProductId, new SelectList(Model.productsList, "ProductId", "Name", Model.InvoiceLines[i].ProductId), new { @id = "ProductId" + i, @class = "form-control productTax", @readonly = "readonly" })
                </td>
                <td> @Html.EditorFor(model => model.InvoiceLines[i].Product.Tax, new { htmlAttributes = new { @id = "Tax" + i, @class = "form-control", @readonly = "readonly" } })</td>
                <td> @Html.EditorFor(model => model.InvoiceLines[i].Quantity, new { htmlAttributes = new { @id = "Quantity" + i, @class = "form-control", @readonly = "readonly" } })</td>
                <td> @Html.EditorFor(model => model.InvoiceLines[i].Value, new { htmlAttributes = new { @id = "Value" + i, @class = "form-control", @readonly = "readonly" } })</td>
                <td> @Html.EditorFor(model => model.InvoiceLines[i].TotalPrice, new { htmlAttributes = new { @id = "TotalPrice" + i, @class = "form-control", @readonly = "readonly" } })</td>
            </tr>
                }
            }
            else
            {
                <tr class="contacts-record-template"></tr>
            }

                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th>@Html.Editor("BillPrice", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</th>
                </tr>

        </tbody>
    </table>



    @Html.HiddenFor(m => m.InvoiceID)
    @Html.AntiForgeryToken()


    <button type="submit" class="btn btn-danger pull-right">Save</button>
</div>
}

     <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#ProductName').change(function () {
            var value = $(this).val();
        

            $.ajax({
                url: '/Invoice/getTax',
                data: { 'ProductId': value},
                type: "POST",
                cache: false,
                success: function (Response) {
                    $('#GSTTax').val(Response.Tax);
                    $('#Value').val(Response.ProductPrice);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("not ok")//GSTTax
                }
            });
        });

        $(document).ready(function () {
            $('#Quantity').keyup(function () {           
                var Qty = $(this).val();
                var Tax = $('#GSTTax').val();
                var UnitValue = $('#Value').val();
                if ($('#ProductName').val() === '') {
                    bootbox.alert({
                        size: "small",
                        title: "Alert",
                        message: "Please Select Product Name First",
                        callback: function ()
                        {
                            $('#Quantity').val("");
                            $('#Total_Price').val("");
                        }
                    })
                }
                var tax = ((Qty * UnitValue) * (Tax / 100));
                var TotalPrice =( tax + (Qty * UnitValue));
                $('#Total_Price').val(TotalPrice);


            });
        });

        $(document).on("click", ".classAdd", function () { //
            var spanValue = $('.values').val();          
            var rowCount = $('.contacts-record-template').length - 1;          
            //to get values from popup
            var ItemName = $('#ItemName').val();
            var Tax = $('#GSTTax').val();
            var Quantity = $('#Quantity').val();
            var Value = $('#Value').val();
            var TotalPrice = $('#Total_Price').val();
            var dropdDownValue = $('#ProductName').val();
            var dropDownText = $("#ProductName option:selected").text();

            var contactdiv = '<tr class="contacts-record-template">' +
                '<td><select class="form-control dropdownTest" data-val="true" data-val-number="The field ProductId must be a number." data-val-required="The ProductId field is required." id="ProductId ' + rowCount + '" name="InvoiceLines[' + rowCount + '].ProductId "><option selected="selected" value="' + dropdDownValue + '">' + dropDownText +'</option></td>'+
                '<td> <input class="form-control text-box single-line" data-val="true" data-val-number="The field GST Tax must be a number." data-val-required="The GST Tax field is required." id="Tax' + rowCount + '" name="InvoiceLines[' + rowCount + '].Product.Tax" readonly="readonly" type="text" value=' + Tax + ' ></td>' +
                '<td> <input class="form-control text-box single-line" data-val="true" data-val-number="The field Quantity must be a number." data-val-required="The Quantity field is required." id="InvoiceLines_' + rowCount + '__Quantity" name="InvoiceLines[' + rowCount + '].Quantity" readonly= "readonly" type="number" value=' + Quantity + ' ></td>' +
                '<td> <input class="form-control text-box single-line" data-val="true" data-val-number="The field Value must be a number." data-val-required="The Value field is required." id="InvoiceLines_' + rowCount + '__Value" name="InvoiceLines[' + rowCount + '].Value" readonly= "readonly" type="text" value=' + Value + ' ></td>' +
                '<td> <input class="form-control text-box single-line valid" data-val="true" data-val-number="The field TotalPrice must be a number." data-val-required="The TotalPrice field is required." id="TotalPrice' + rowCount + '" name="InvoiceLines[' + rowCount + '].TotalPrice" readonly="readonly" type="text" value=' + TotalPrice + ' ></td>' +
                '<td><input data-val="true" data-val-number="The field InvoiceLineId must be a number." data-val-required="The InvoiceLineId field is required." htmlattributes="{ class = form-control }" id="InvoiceLines_' + rowCount + '__InvoiceLineId" name="InvoiceLines[' + rowCount + '].InvoiceLineId" type="hidden" value=' + (rowCount + 1) + '></td>' +
                '</tr>';

            $('#maintable').append(contactdiv); // Adding these controls to Main table class
            
           // To set Empty after submit
            $('#ProductName').val("");
            $('#GSTTax').val("");
            $('#Quantity').val("");
            $('#Value').val("");
            $('#Total_Price').val("")
        });
    });
</script>  